// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  image String?
  consent Boolean @default(false)
  roleId String
  role Role @relation(fields: [roleId], references: [id])
  recipes Recipe[]
  favorites Favorite[]
  createAt DateTime @default(now())
}

model Role {
  id String @id @default(uuid())
  name String @unique
  users User[]
}

model Recipe {
  id String @id @default(uuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  title String
  serve Int?
  ingredients RecipeIngredient[]
  ustensils RecipeUstensil[]
  description String?
  instructions String
  typeId String
  type Type @relation(fields: [typeId], references: [id])
  imageUrl String
  prepTime Int
  cookTime Int 
  moods MoodRecipe[]
  diets DietRecipe[]
  origins OriginRecipe[]
  favorites Favorite[]
  createAt DateTime @default(now())
}

model Type {
  id String @id @default(uuid())
  name String @unique
  recipes Recipe[]
}

model Ingredient {
  id String @id @default(uuid())
  name String @unique
  recipes RecipeIngredient[]
}

model RecipeIngredient {
  id String @id @default(uuid())
  recipeId String
  recipe Recipe @relation(fields: [recipeId], references: [id])
  ingredientId String
  ingredient Ingredient @relation(fields: [ingredientId], references: [id])
  quantity String
}

model Ustensil {
  id String @id @default(uuid())
  name String @unique
  recipes RecipeUstensil[]
}

model RecipeUstensil {
  id String @id @default(uuid())
  recipeId String
  recipe Recipe @relation(fields: [recipeId], references: [id])
  ustensilId String
  ustensil Ustensil @relation(fields: [ustensilId], references: [id])
}

model Mood {
  id String @id @default(uuid())
  name String @unique
  recipes MoodRecipe[]
}

model MoodRecipe {
  id String @id @default(uuid())
  recipeId String
  recipe Recipe @relation(fields: [recipeId], references: [id])
  moodId String
  mood Mood @relation(fields: [moodId], references: [id])
}

model Diet {
  id String @id @default(uuid())
  name String @unique
  recipes DietRecipe[]
}

model DietRecipe {
  id String @id @default(uuid())
  recipeId String
  recipe Recipe @relation(fields: [recipeId], references: [id])
  dietId String
  diet Diet @relation(fields: [dietId], references: [id])
}

model Origin {
  id String @id @default(uuid())
  name String @unique
  recipes OriginRecipe[]
}

model OriginRecipe {
  id String @id @default(uuid())
  recipeId String
  recipe Recipe @relation(fields: [recipeId], references: [id])
  originId String
  origin Origin @relation(fields: [originId], references: [id])
}

model Favorite {
  id String @id @default(uuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  recipeId String
  recipe Recipe @relation(fields: [recipeId], references: [id])
  createAt DateTime @default(now())
}